{"version":3,"sources":["components/Content/Users/style.module.css","components/common/Paginator/style.module.css","components/common/Paginator/index.jsx","components/Content/Users/Users.jsx","redux/usersSelectors.js","components/Content/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalCount","count","currentPage","handlePageNumClick","portionSize","pagesAmount","Math","ceil","pagesNumbers","i","push","portionCount","useState","portionNumber","setPortionNumber","leftBorderPagesNumbers","rigthBorderPagesNumbers","pages","filter","number","map","className","css","activePage","onClick","key","pagesNumbersBox","disabled","Users","props","users","user","id","userBox","photo","to","navlink","src","photos","small","userPhoto","img","alt","name","followed","isFollowing","includes","unfollowThunkCreator","followThunkCreator","getUsers","state","usersPage","getCount","getCurrentPage","getTotalCount","getIsFetching","isFetching","getIsFollowing","UsersContainer","this","getUsersThunkCreator","setCurrentPage","bind","unfollow","follow","toggleIsFollowing","React","Component","connect"],"mappings":"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","file":"static/js/3.4c1ab193.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBox\":\"style_userBox__bc3sa\",\"photo\":\"style_photo__FgK0E\",\"img\":\"style_img__1flFp\",\"pageNumber\":\"style_pageNumber__14c4c\",\"activePage\":\"style_activePage__1DF1r\",\"pagesNumbersBox\":\"style_pagesNumbersBox__13kbn\",\"navlink\":\"style_navlink__2C5KW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"style_activePage__2U3lD\",\"pagesNumbersBox\":\"style_pagesNumbersBox__UxS9h\"};","import React, { useState } from \"react\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst Paginator = ({\r\n  totalCount,\r\n  count,\r\n  currentPage,\r\n  handlePageNumClick,\r\n  portionSize = 10\r\n}) => {\r\n  const pagesAmount = Math.ceil(totalCount / count);\r\n  const pagesNumbers = [];\r\n\r\n  for (let i = 1; i <= pagesAmount; i++) {\r\n    pagesNumbers.push(i);\r\n  }\r\n\r\n  const portionCount = Math.ceil(pagesAmount / count);\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  const leftBorderPagesNumbers = (portionNumber - 1) * portionSize + 1;\r\n  const rigthBorderPagesNumbers = portionNumber * portionSize;\r\n\r\n  const pages = pagesNumbers\r\n    .filter(\r\n      number =>\r\n        number >= leftBorderPagesNumbers && number <= rigthBorderPagesNumbers\r\n    )\r\n    .map(number => {\r\n      return (\r\n        <span\r\n          className={number === currentPage && css.activePage}\r\n          onClick={() => {\r\n            handlePageNumClick(number);\r\n          }}\r\n          key={number}\r\n        >\r\n          {number}\r\n        </span>\r\n      );\r\n    });\r\n\r\n  const handleBtnLeft = () => {\r\n    setPortionNumber(portionNumber - 1);\r\n  };\r\n  const handleBtnRight = () => {\r\n    setPortionNumber(portionNumber + 1);\r\n  };\r\n\r\n  return (\r\n    <div className={css.pagesNumbersBox}>\r\n      <button onClick={handleBtnLeft} disabled={portionNumber <= 1}>\r\n        {\"<--\"}\r\n      </button>\r\n      {pages}{\" \"}\r\n      <button onClick={handleBtnRight} disabled={portionNumber >= portionCount}>\r\n        {\"-->\"}\r\n      </button>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport userPhoto from \"../../../assets/img/userPhoto.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../../common/Paginator\";\r\n\r\nconst Users = props => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        totalCount={props.totalCount}\r\n        count={props.count}\r\n        currentPage={props.currentPage}\r\n        handlePageNumClick={props.handlePageNumClick}\r\n      />\r\n\r\n      {props.users.map(user => (\r\n        <div key={user.id} className={css.userBox}>\r\n          <div className={css.photo}>\r\n            <NavLink to={`/profile/${user.id}`} className={css.navlink}>\r\n              <img\r\n                src={user.photos.small == null ? userPhoto : user.photos.small}\r\n                className={css.img}\r\n                alt=\"avaPhoto\"\r\n              />\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"content\">\r\n            <div className=\"info\">\r\n              <span className=\"name\">{user.name}</span>\r\n              {/* <span>{user.location.city}</span>\r\n              <span>{user.location.country}</span> */}\r\n            </div>\r\n            {user.followed ? (\r\n              <button\r\n                disabled={props.isFollowing.includes(user.id)}\r\n                onClick={() => {\r\n                  props.unfollowThunkCreator(user.id);\r\n                }}\r\n              >\r\n                Удалить из друзей\r\n              </button>\r\n            ) : (\r\n              <button\r\n                disabled={props.isFollowing.includes(user.id)}\r\n                onClick={() => {\r\n                  props.followThunkCreator(user.id);\r\n                }}\r\n              >\r\n                Добавить в друзья\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export const getUsers = state => {\r\n  return state.usersPage.users;\r\n};\r\nexport const getCount = state => {\r\n  return state.usersPage.count;\r\n};\r\nexport const getCurrentPage = state => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getTotalCount = state => {\r\n  return state.usersPage.totalCount;\r\n};\r\nexport const getIsFetching = state => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getIsFollowing = state => {\r\n  return state.usersPage.isFollowing;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import Users from \".\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  toggleIsFollowing,\r\n  getUsersThunkCreator,\r\n  followThunkCreator,\r\n  unfollowThunkCreator\r\n} from \"../../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport {\r\n  getUsers,\r\n  getCount,\r\n  getCurrentPage,\r\n  getTotalCount,\r\n  getIsFetching,\r\n  getIsFollowing\r\n} from \"../../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsersThunkCreator(this.props.count, this.props.currentPage);\r\n  }\r\n\r\n  handlePageNumClick(number) {\r\n    this.props.getUsersThunkCreator(this.props.count, number);\r\n    this.props.setCurrentPage(number);\r\n  }\r\n\r\n  render() {\r\n    const pagesAmount = Math.ceil(this.props.totalCount / this.props.count);\r\n    const pagesNumbers = [];\r\n    for (let i = 1; i <= pagesAmount; i++) {\r\n      pagesNumbers.push(i);\r\n    }\r\n\r\n    //Из-за прелоудера здесь будет полностью обновляться Users если данные в состоянии загрузки, то есть если данные загружаются показывается прелоудер вместо юзеров, затем подгружаются данные показываются юзера но на этот момент ВЕСЬ компонент обновился и компоненты внутри тоже, поэтому при выборе страницы далее чем текущая страница обновится все что внутри и пагинатор тоже и внутри пагинатора state (portionNumber станет снова единицей и отсчет будет относительно начала) тоже, поэтому нумерация начнется сначала при каждом переходе на новую\r\n    return (\r\n      <>\r\n        {/* {this.props.isFetching ? (\r\n          <Preloader />\r\n        ) : ( */}\r\n        <div>\r\n          <Users\r\n            totalCount={this.props.totalCount}\r\n            count={this.props.count}\r\n            currentPage={this.props.currentPage}\r\n            handlePageNumClick={this.handlePageNumClick.bind(this)}\r\n            unfollow={this.props.unfollow}\r\n            follow={this.props.follow}\r\n            users={this.props.users}\r\n            isFollowing={this.props.isFollowing}\r\n            toggleIsFollowing={this.props.toggleIsFollowing}\r\n            followThunkCreator={this.props.followThunkCreator}\r\n            unfollowThunkCreator={this.props.unfollowThunkCreator}\r\n          />\r\n        </div>\r\n        {/* )} */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//Использованы селекторы\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: getUsers(state),\r\n    count: getCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    totalCount: getTotalCount(state),\r\n    isFetching: getIsFetching(state),\r\n    isFollowing: getIsFollowing(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  toggleIsFollowing,\r\n  getUsersThunkCreator,\r\n  followThunkCreator,\r\n  unfollowThunkCreator\r\n})(UsersContainer);\r\n"],"sourceRoot":""}