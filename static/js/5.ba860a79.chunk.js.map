{"version":3,"sources":["components/Login/style.module.css","components/Login/Input.jsx","components/Login/index.jsx"],"names":["module","exports","Input","input","meta","props","hasError","touched","error","className","css","fieldBox","inputBox","login","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","loginForm","Field","component","type","name","placeholder","validate","required","checkboxContainer","htmlFor","btnLogin","mainError","mapDispatchToProps","connect","state","isAuth","getIsAuth","to","loginBlock","formData","email","password"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,WAAa,0BAA0B,UAAY,yBAAyB,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,wBAAwB,MAAQ,qBAAqB,SAAW,wBAAwB,MAAQ,qBAAqB,SAAW,wBAAwB,UAAY,2B,wHCExUC,EAAQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAC5CC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACE,yBAAKC,UAAWC,IAAIC,UAClB,yBAAKF,UAAWC,IAAIE,UAClB,yCACEH,UAAWC,IAAIG,MAAQ,KAAOP,EAAWI,IAAIF,MAAQ,KACjDL,EACAE,O,0BC+BRS,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAhCL,SAAAV,GAChB,OACE,0BAAMY,SAAUZ,EAAMa,aAAcT,UAAWC,IAAIS,WACjD,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWnB,EACXoB,KAAK,QACLC,KAAK,QACLC,YAAY,mDACZC,SAAU,CAACC,QAGf,6BACE,kBAACN,EAAA,EAAD,CACEC,UAAWnB,EACXqB,KAAK,WACLC,YAAY,kFACZF,KAAK,WACLG,SAAU,CAACC,QAGf,yBAAKjB,UAAWC,IAAIiB,mBAClB,2BAAOC,QAAQ,cACb,kBAACR,EAAA,EAAD,CAAOC,UAAU,QAAQC,KAAK,WAAWC,KAAK,eAAgB,IADhE,oFAKF,4BAAQd,UAAWC,IAAImB,UAAvB,kCACCxB,EAAMG,OAAS,yBAAKC,UAAWC,IAAIoB,WAAYzB,EAAMG,WAuBtDuB,EAAqB,CACzBlB,WAGamB,uBAPS,SAAAC,GAAK,MAAK,CAChCC,OAAQC,YAAUF,MAMoBF,EAAzBC,EArBD,SAAA3B,GAKZ,OAAIA,EAAM6B,OAAe,kBAAC,IAAD,CAAUE,GAAG,aAGpC,yBAAK3B,UAAWC,IAAI2B,YAClB,kBAACvB,EAAD,CAAgBG,SARH,SAAAqB,GACfjC,EAAMQ,MAAMyB,EAASC,MAAOD,EAASE","file":"static/js/5.ba860a79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"style_loginBlock__3yQVA\",\"loginForm\":\"style_loginForm__3S9-N\",\"btnLogin\":\"style_btnLogin__1rWnN\",\"mainError\":\"style_mainError__hxpMW\",\"fieldBox\":\"style_fieldBox__cIapc\",\"login\":\"style_login__226q9\",\"password\":\"style_password__3W9Du\",\"error\":\"style_error__1ArY3\",\"errorBox\":\"style_errorBox__1OhPh\",\"errorSpan\":\"style_errorSpan__2-49a\"};","import React from \"react\";\r\nimport css from \"./style.module.css\";\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={css.fieldBox}>\r\n      <div className={css.inputBox}>\r\n        <input\r\n          className={css.login + \" \" + (hasError ? css.error : \"\")}\r\n          {...input}\r\n          {...props}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { Input } from \"./Input\";\r\nimport { required } from \"../../utils/validators\";\r\nimport { login } from \"../../redux/authReducer\";\r\nimport { getIsAuth } from \"../../redux/authSelectors\";\r\n\r\nconst LoginForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={css.loginForm}>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Введите email\"\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          name=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          type=\"password\"\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div className={css.checkboxContainer}>\r\n        <label htmlFor=\"rememberMe\">\r\n          <Field component=\"input\" type=\"checkbox\" name=\"rememberMe\" />{\" \"}\r\n          Запомнить меня\r\n        </label>\r\n      </div>\r\n      <button className={css.btnLogin}>Войти</button>\r\n      {props.error && <div className={css.mainError}>{props.error}</div>}\r\n    </form>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = props => {\r\n  const onSubmit = formData => {\r\n    props.login(formData.email, formData.password);\r\n  };\r\n\r\n  if (props.isAuth) return <Redirect to=\"/profile\" />;\r\n\r\n  return (\r\n    <div className={css.loginBlock}>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: getIsAuth(state)\r\n});\r\nconst mapDispatchToProps = {\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}