{"version":3,"sources":["components/Login/style.module.css","components/Login/index.jsx"],"names":["module","exports","LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","component","InputC","type","name","placeholder","validate","required","htmlFor","className","css","btnLogin","error","btnLoginError","mainError","mapDispatchToProps","loginTC","connect","state","isAuth","auth","to","formData","email","password"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,SAAW,wBAAwB,cAAgB,6BAA6B,UAAY,2B,iCCD9G,wGA2CMC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAlCL,SAAAE,GAChB,OACE,0BAAMC,SAAUD,EAAME,cACpB,6BACE,kBAAC,IAAD,CACEC,UAAWC,IACXC,KAAK,QACLC,KAAK,QACLC,YAAY,mDACZC,SAAU,CAACC,QAGf,6BACE,kBAAC,IAAD,CACEN,UAAWC,IACXE,KAAK,WACLC,YAAY,kFACZF,KAAK,WACLG,SAAU,CAACC,QAGf,6BACE,2BAAOC,QAAQ,cAAf,mFACA,kBAAC,IAAD,CAAOP,UAAWC,IAAQC,KAAK,WAAWC,KAAK,eAAgB,KAEjE,4BACEK,UAAWC,IAAIC,SAAW,KAAOb,EAAMc,OAASF,IAAIG,gBADtD,UAKCf,EAAMc,OAAS,0BAAMH,UAAWC,IAAII,WAAYhB,EAAMc,WAuBvDG,EAAqB,CACzBC,aAGaC,uBAPS,SAAAC,GAAK,MAAK,CAChCC,OAAQD,EAAME,KAAKD,UAMmBJ,EAAzBE,EArBD,SAAAnB,GAKZ,OAAIA,EAAMqB,OAAe,kBAAC,IAAD,CAAUE,GAAG,aAGpC,6BACE,kBAAC1B,EAAD,CAAgBI,SARH,SAAAuB,GACfxB,EAAMkB,QAAQM,EAASC,MAAOD,EAASE","file":"static/js/5.f7fd5926.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLogin\":\"style_btnLogin__1rWnN\",\"btnLoginError\":\"style_btnLoginError__1b5ul\",\"mainError\":\"style_mainError__hxpMW\"};","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { InputC } from \"../common/FormItems/Items\";\r\nimport { required } from \"../../utils/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginTC } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst LoginForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={InputC}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Введите email\"\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={InputC}\r\n          name=\"password\"\r\n          placeholder=\"Введите пароль\"\r\n          type=\"password\"\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"rememberMe\">Запомнить меня</label>\r\n        <Field component={InputC} type=\"checkbox\" name=\"rememberMe\" />{\" \"}\r\n      </div>\r\n      <button\r\n        className={css.btnLogin + \" \" + (props.error && css.btnLoginError)}\r\n      >\r\n        Log In\r\n      </button>\r\n      {props.error && <span className={css.mainError}>{props.error}</span>}\r\n    </form>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = props => {\r\n  const onSubmit = formData => {\r\n    props.loginTC(formData.email, formData.password);\r\n  };\r\n\r\n  if (props.isAuth) return <Redirect to=\"/profile\" />;\r\n\r\n  return (\r\n    <div>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\nconst mapDispatchToProps = {\r\n  loginTC\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}